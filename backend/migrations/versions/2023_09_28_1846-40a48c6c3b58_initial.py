"""initial

Revision ID: 40a48c6c3b58
Revises:
Create Date: 2023-09-28 18:46:17.179841

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '40a48c6c3b58'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('menus',
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_menus')),
    sa.UniqueConstraint('name', name=op.f('uq_menus_name')),
    sa.UniqueConstraint('url', name=op.f('uq_menus_url'))
    )
    op.create_table('singers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_singers')),
    sa.UniqueConstraint('name', name=op.f('uq_singers_name'))
    )
    op.create_table('songs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_songs')),
    sa.UniqueConstraint('name', name=op.f('uq_songs_name'))
    )
    op.create_table('users',
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('is_staff', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('name', name=op.f('uq_users_name')),
    sa.UniqueConstraint('password_hash', name=op.f('uq_users_password_hash'))
    )
    op.create_table('albums',
    sa.Column('singer_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.ForeignKeyConstraint(['singer_id'], ['singers.id'], name=op.f('fk_albums_singer_id_singers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_albums')),
    sa.UniqueConstraint('name', name=op.f('uq_albums_name'))
    )
    op.create_table('albums_songs',
    sa.Column('album_id', sa.Integer(), nullable=True),
    sa.Column('song_id', sa.Integer(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['album_id'], ['albums.id'], name=op.f('fk_albums_songs_album_id_albums')),
    sa.ForeignKeyConstraint(['song_id'], ['songs.id'], name=op.f('fk_albums_songs_song_id_songs'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('albums_songs')
    op.drop_table('albums')
    op.drop_table('users')
    op.drop_table('songs')
    op.drop_table('singers')
    op.drop_table('menus')
    # ### end Alembic commands ###
